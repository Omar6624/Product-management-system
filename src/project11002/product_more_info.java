/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project11002;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author asus
 */
public class product_more_info extends javax.swing.JFrame {

    /**
     * Creates new form adminMoreSearch
     */
    public Connection con;
    PreparedStatement pst;
    public product_more_info() {
        initComponents();
        connect();
    }
    public void connect()
    {
        String connection = "jdbc:sqlserver://localhost:1433; databaseName=Project1799 ;user=sa;password=123456"  ;
        try {
            con=DriverManager.getConnection(connection);
        } catch (SQLException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        ss = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));

        jComboBox1.setFont(new java.awt.Font("Arial", 2, 18)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(153, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All product info", "Search by product id", "search by product name", "search by product supplier id", "search by product brand", "search by product price", "search by product selling price", "search by product quantity", "max price of products", "max selling price of products", "max quantity available", "min quantity available" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(153, 0, 0));
        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Imprint MT Shadow", 1, 48)); // NOI18N
        jLabel1.setText("Prodcuct More Info");

        jButton2.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(153, 0, 0));
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ss, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(jLabel1)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(ss, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         if(jComboBox1.getSelectedItem().equals("All product info"))
        {
            try {
                String qe ="select product_info.pro_id,pro_name,pro_brand,supplier_id ,Product.pro_price,pro_quantity,pro_sellingPrice\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id\n" +
"  ";
                pst =con.prepareStatement(qe);
                //pst.setString(1,ss.getText());
                ResultSet rs = pst.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                //pst.close();

            } catch (SQLException ex) {
                Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(jComboBox1.getSelectedItem().equals("Search by product id"))
                {
                    try {
                        String qe ="  select product_info.pro_id,pro_name,pro_brand,supplier_id ,Product.pro_price,pro_quantity,pro_sellingPrice\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id where product.pro_id =?";
                        pst =con.prepareStatement(qe);
                        pst.setString(1,ss.getText());
                        ResultSet rs = pst.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                        //pst.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
         else if(jComboBox1.getSelectedItem().equals("search by product name"))
                {
                    try {
                        String qe ="select product_info.pro_id,pro_name,pro_brand,supplier_id ,Product.pro_price,pro_quantity,pro_sellingPrice\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id where product_info.pro_name =? ";
                        pst =con.prepareStatement(qe);
                        pst.setString(1,ss.getText());
                        ResultSet rs = pst.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                        //pst.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
         else if(jComboBox1.getSelectedItem().equals("search by product supplier id"))
                {
                    try {
                        String qe =" select product_info.pro_id,pro_name,pro_brand,supplier_id ,Product.pro_price,pro_quantity,pro_sellingPrice\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id where product_info.supplier_id =?";
                        pst =con.prepareStatement(qe);
                        pst.setString(1,ss.getText());
                        ResultSet rs = pst.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                        //pst.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
         
         else if(jComboBox1.getSelectedItem().equals("search by product brand"))
                {
                    try {
                        String qe ="  select product_info.pro_id,pro_name,pro_brand,supplier_id ,Product.pro_price,pro_quantity,pro_sellingPrice\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id where product_info.pro_brand =?";
                        pst =con.prepareStatement(qe);
                       pst.setString(1,ss.getText());
                        ResultSet rs = pst.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                        //pst.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
          else if(jComboBox1.getSelectedItem().equals("search by product price"))
                {
                    try {
                        String qe ="select product_info.pro_id,pro_name,pro_brand,supplier_id ,Product.pro_price,pro_quantity,pro_sellingPrice\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id where product.pro_price > ?";
                        pst =con.prepareStatement(qe);
                        pst.setString(1,ss.getText());
                        ResultSet rs = pst.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                        //pst.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
         else if(jComboBox1.getSelectedItem().equals("search by product selling price"))
                {
                    try {
                        String qe =" select product_info.pro_id,pro_name,pro_brand,supplier_id ,Product.pro_price,pro_quantity,pro_sellingPrice\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id where product.pro_sellingPrice > ?";
                        pst =con.prepareStatement(qe);
                        pst.setString(1,ss.getText());
                        ResultSet rs = pst.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                        //pst.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
         
         else if(jComboBox1.getSelectedItem().equals("search by product quantity"))
                {
                    try {
                        String qe ="  select product_info.pro_id,pro_name,pro_brand,supplier_id ,Product.pro_price,pro_quantity,pro_sellingPrice\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id where product.pro_quantity >?\n" +
" ";
                        pst =con.prepareStatement(qe);
                        pst.setString(1,ss.getText());
                        ResultSet rs = pst.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                        //pst.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
         
           else if(jComboBox1.getSelectedItem().equals("max price of products"))
                {
                    try {
                        String qe =" select product_info.pro_name, max(product.pro_price)as max_price\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id group by pro_name \n" +
" \n" +
" ";
                        pst =con.prepareStatement(qe);
                        //pst.setString(1,ss.getText());
                        ResultSet rs = pst.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                        //pst.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
         
           else if(jComboBox1.getSelectedItem().equals("max selling price of products"))
                {
                    try {
                        String qe ="select product_info.pro_name, max(product.pro_sellingPrice)as max_selling_price\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id group by pro_name\n" +
" ";
                        pst =con.prepareStatement(qe);
                        //pst.setString(1,ss.getText());
                        ResultSet rs = pst.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                        //pst.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
         
         else if(jComboBox1.getSelectedItem().equals("max quantity available"))
                {
                    try {
                        String qe ="select product_info.pro_name, max(product.pro_quantity)as max_quantity\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id group by pro_name\n" +
" \n" +
" \n" +
"  ";
                        pst =con.prepareStatement(qe);
                        //pst.setString(1,ss.getText());
                        ResultSet rs = pst.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                        //pst.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
         
         else if(jComboBox1.getSelectedItem().equals("min quantity available"))
                {
                    try {
                        String qe ="select product_info.pro_name, min(product.pro_quantity)as max_quantity\n" +
" from product_info \n" +
" inner join\n" +
" product on product_info.pro_id = product.pro_id group by pro_name ";
                        pst =con.prepareStatement(qe);
                        //pst.setString(1,ss.getText());
                        ResultSet rs = pst.executeQuery();
                        jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                        //pst.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(admin_table.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
          
          
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ssActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ssActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Mainpage f =new Mainpage();
        f.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(product_more_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(product_more_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(product_more_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(product_more_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new product_more_info().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField ss;
    // End of variables declaration//GEN-END:variables
}
